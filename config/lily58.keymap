/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp DE_N1  &kp N2  &kp DE_N3  &kp DE_N4         &kp DE_N5                               &kp DE_N6    &kp DE_N7     &kp DE_N8     &kp DE_N9   &kp DE_N0        &kp DE_ESZETT
&kp TAB    &kp Q      &kp W   &kp E      &kp R             &kp T                                   &kp DE_Z     &kp U         &kp I         &kp O       &kp P            &kp DE_U_UMLAUT
&kp LCTRL  &kp A      &kp S   &kp D      &kp F             &kp G                                   &kp H        &kp J         &kp K         &kp L       &kp DE_O_UMLAUT  &kp DE_A_UMLAUT
&kp LSHFT  &kp DE_Y   &kp X   &kp C      &kp V             &kp B      &kp ESCAPE    &kp TAB        &kp N        &kp M         &kp DE_COMMA  &kp DE_DOT  &kp DE_MINUS     &kp DE_PLUS
                              &kp LALT   &kp LEFT_CONTROL  &mo 1      &kp SPACE     &kp BACKSPACE  &lt 2 ENTER  &kp LEFT_ALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3   &bt BT_SEL 4                      &to 3             &trans        &trans        &trans                   &trans                    &trans
&trans      &trans            &kp DE_QUESTION    &trans             &trans         &trans                            &kp GRAVE         &kp DE_PIPE   &kp DE_EQUAL  &kp DE_LBRC              &kp DE_RBRC               &trans
&kp GRAVE   &kp EXCL          &kp DE_DQT         &kp DE_SECTION     &kp DE_DOLLAR  &kp DE_PERCENT                    &kp DE_BACKSLASH  &kp DE_SLASH  &kp DE_AT     &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &trans
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans         &trans          &trans    &trans  &kp DE_TILDE      &kp DE_MINUS  &kp DE_PLUS   &kp DE_LEFT_BRACKET      &kp DE_RIGHT_BRACKET      &trans
                                                 &trans             &trans         &trans          &trans    &trans  &trans            &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans       &trans     &trans     &trans     &trans    &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans                    &trans       &trans     &kp UP     &trans     &trans    &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans                    &trans       &kp LEFT   &kp DOWN   &kp RIGHT  &trans    &trans
&trans  &trans  &kp N7  &kp N8  &kp N8  &trans  &trans    &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH
                        &trans  &trans  &trans  &trans    &trans  &trans       &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&trans            &kp N1            &kp N2  &kp N3  &kp N4  &kp N5                       &trans  &to 0   &trans  &trans  &trans  &trans
&trans            &kp T             &kp Q   &kp W   &kp E   &kp R                        &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHIFT        &kp LEFT_SHIFT    &kp A   &kp S   &kp D   &kp F                        &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &kp LEFT_CONTROL  &kp X   &kp X   &kp C   &kp V   &kp K        &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                            &trans  &trans  &trans  &kp SPACE    &trans  &trans  &trans  &trans
            >;
        };
    };
};
